{
  "address": "0x08a681D79a2B43D37cF644AB5f2167281A045e34",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buyDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "daiBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usdcBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x95e50a58a08e8f0eb4b1c2cbecdc9817e910d0555fd8359eb585335abdfeb185",
  "receipt": {
    "to": null,
    "from": "0x1B150538E943F00127929f7eeB65754f7beB0B6d",
    "contractAddress": "0x08a681D79a2B43D37cF644AB5f2167281A045e34",
    "transactionIndex": 6,
    "gasUsed": "981685",
    "logsBloom": "0x
    "blockHash": "0x1f96aac1b6460af546837aebd194b501b561b82fd395a266703faa312600d029",
    "transactionHash": "0x95e50a58a08e8f0eb4b1c2cbecdc9817e910d0555fd8359eb585335abdfeb185",
    "logs": [],
    "blockNumber": 4410888,
    "cumulativeGasUsed": "1968499",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b6aa86fecc0843525ef56e0cb7c5489a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"daiBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usdcBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/exchange/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"contracts/exchange/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\ncontract Exchange {\\n    address payable public owner;\\n\\n    // Aave ERC20 Token addresses on sepolia network\\n    address private constant daiAddress =\\n        0xFF34B3d4Aee8ddCd6F9AFFFB6Fe49bD371b8a357;\\n    address private constant usdcAddress =\\n        0x94a9D9AC8a22534E3FaCa9F4e7F2E2cf85d5E4C8;\\n\\n    IERC20 private immutable dai;\\n    IERC20 private immutable usdc;\\n\\n    // exchange rate indexes\\n    // assume that the dexArate is the rate at 1 dex and the dexB is the other dex\\n    // DexA rate is 1dai is 90 of usdc and on dexB its 1usdc == 1dai (arbitrage opportunity)\\n    uint256 dexARate = 90;\\n    uint256 dexBRate = 100;\\n\\n    // keeps track of individuals' dai balances\\n    mapping(address => uint256) public daiBalances;\\n\\n    // keeps track of individuals' USDC balances\\n    mapping(address => uint256) public usdcBalances;\\n\\n    constructor() {\\n        owner = payable(msg.sender);\\n        dai = IERC20(daiAddress);\\n        usdc = IERC20(usdcAddress);\\n    }\\n\\n    function depositUSDC(uint256 _amount) external {\\n        usdcBalances[msg.sender] += _amount;\\n        uint256 allowance = usdc.allowance(msg.sender, address(this));\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\n        usdc.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function depositDAI(uint256 _amount) external {\\n        daiBalances[msg.sender] += _amount;\\n        uint256 allowance = dai.allowance(msg.sender, address(this));\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\n        dai.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function buyDAI() external {\\n        uint256 daiToReceive = ((usdcBalances[msg.sender] / dexARate) * 100) *\\n            (10**12);\\n        dai.transfer(msg.sender, daiToReceive);\\n    }\\n\\n    function sellDAI() external {\\n        uint256 usdcToReceive = ((daiBalances[msg.sender] * dexBRate) / 100) /\\n            (10**12);\\n        usdc.transfer(msg.sender, usdcToReceive);\\n    }\\n\\n    function getBalance(address _tokenAddress) external view returns (uint256) {\\n        return IERC20(_tokenAddress).balanceOf(address(this));\\n    }\\n\\n    function withdraw(address _tokenAddress) external onlyOwner {\\n        IERC20 token = IERC20(_tokenAddress);\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            msg.sender == owner,\\n            \\\"Only the contract owner can call this function\\\"\\n        );\\n        _;\\n    }\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x062d5733abffda8b73ccfc61b75e5671158d8f095171c20d34d2c672388e96cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052605a600155606460025534801561001a57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ff34b3d4aee8ddcd6f9afffb6fe49bd371b8a35773ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250507394a9d9ac8a22534e3faca9f4e7f2e2cf85d5e4c873ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060805160a051610f9861012c6000396000818161039f0152818161085a015261093b01526000818161029001528181610499015261057a0152610f986000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610116578063a99c68c514610141578063ef0673421461017e578063f688bcfb146101bb578063f8b2cb4f146101e457610091565b806305abf9041461009657806315602991146100ad578063365833e1146100c457806351cff8d9146100ed57610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab610221565b005b3480156100b957600080fd5b506100c2610330565b005b3480156100d057600080fd5b506100eb60048036038101906100e69190610a9c565b61043f565b005b3480156100f957600080fd5b50610114600480360381019061010f9190610b27565b61061d565b005b34801561012257600080fd5b5061012b6107ac565b6040516101389190610b75565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190610b27565b6107d0565b6040516101759190610b9f565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a09190610b27565b6107e8565b6040516101b29190610b9f565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190610a9c565b610800565b005b3480156101f057600080fd5b5061020b60048036038101906102069190610b27565b6109de565b6040516102189190610b9f565b60405180910390f35b600064e8d4a510006064600154600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102789190610c18565b6102829190610c49565b61028c9190610c49565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102e9929190610cb2565b6020604051808303816000875af1158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c9190610d13565b5050565b600064e8d4a510006064600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103879190610c49565b6103919190610c18565b61039b9190610c18565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103f8929190610cb2565b6020604051808303816000875af1158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190610d13565b5050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461048e9190610d40565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104f2929190610d96565b602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190610dd4565b905081811015610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90610e5e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105d593929190610e7e565b6020604051808303816000875af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610d13565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290610f27565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107069190610f47565b602060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610dd4565b6040518363ffffffff1660e01b8152600401610764929190610cb2565b6020604051808303816000875af1158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190610d13565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461084f9190610d40565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016108b3929190610d96565b602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190610dd4565b905081811015610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090610e5e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161099693929190610e7e565b6020604051808303816000875af11580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190610d13565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a199190610f47565b602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190610dd4565b9050919050565b600080fd5b6000819050919050565b610a7981610a66565b8114610a8457600080fd5b50565b600081359050610a9681610a70565b92915050565b600060208284031215610ab257610ab1610a61565b5b6000610ac084828501610a87565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af482610ac9565b9050919050565b610b0481610ae9565b8114610b0f57600080fd5b50565b600081359050610b2181610afb565b92915050565b600060208284031215610b3d57610b3c610a61565b5b6000610b4b84828501610b12565b91505092915050565b6000610b5f82610ac9565b9050919050565b610b6f81610b54565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b610b9981610a66565b82525050565b6000602082019050610bb46000830184610b90565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2382610a66565b9150610c2e83610a66565b925082610c3e57610c3d610bba565b5b828204905092915050565b6000610c5482610a66565b9150610c5f83610a66565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c9857610c97610be9565b5b828202905092915050565b610cac81610ae9565b82525050565b6000604082019050610cc76000830185610ca3565b610cd46020830184610b90565b9392505050565b60008115159050919050565b610cf081610cdb565b8114610cfb57600080fd5b50565b600081519050610d0d81610ce7565b92915050565b600060208284031215610d2957610d28610a61565b5b6000610d3784828501610cfe565b91505092915050565b6000610d4b82610a66565b9150610d5683610a66565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8b57610d8a610be9565b5b828201905092915050565b6000604082019050610dab6000830185610ca3565b610db86020830184610ca3565b9392505050565b600081519050610dce81610a70565b92915050565b600060208284031215610dea57610de9610a61565b5b6000610df884828501610dbf565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610e48601983610e01565b9150610e5382610e12565b602082019050919050565b60006020820190508181036000830152610e7781610e3b565b9050919050565b6000606082019050610e936000830186610ca3565b610ea06020830185610ca3565b610ead6040830184610b90565b949350505050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610f11602e83610e01565b9150610f1c82610eb5565b604082019050919050565b60006020820190508181036000830152610f4081610f04565b9050919050565b6000602082019050610f5c6000830184610ca3565b9291505056fea2646970667358221220b8dc78f2c4aab37b24b28ce2e3a899f535e29aba4eb2714d902c0b5176377f0764736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610116578063a99c68c514610141578063ef0673421461017e578063f688bcfb146101bb578063f8b2cb4f146101e457610091565b806305abf9041461009657806315602991146100ad578063365833e1146100c457806351cff8d9146100ed57610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab610221565b005b3480156100b957600080fd5b506100c2610330565b005b3480156100d057600080fd5b506100eb60048036038101906100e69190610a9c565b61043f565b005b3480156100f957600080fd5b50610114600480360381019061010f9190610b27565b61061d565b005b34801561012257600080fd5b5061012b6107ac565b6040516101389190610b75565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190610b27565b6107d0565b6040516101759190610b9f565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a09190610b27565b6107e8565b6040516101b29190610b9f565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190610a9c565b610800565b005b3480156101f057600080fd5b5061020b60048036038101906102069190610b27565b6109de565b6040516102189190610b9f565b60405180910390f35b600064e8d4a510006064600154600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102789190610c18565b6102829190610c49565b61028c9190610c49565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102e9929190610cb2565b6020604051808303816000875af1158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c9190610d13565b5050565b600064e8d4a510006064600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103879190610c49565b6103919190610c18565b61039b9190610c18565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103f8929190610cb2565b6020604051808303816000875af1158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190610d13565b5050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461048e9190610d40565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104f2929190610d96565b602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190610dd4565b905081811015610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90610e5e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105d593929190610e7e565b6020604051808303816000875af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610d13565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290610f27565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107069190610f47565b602060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610dd4565b6040518363ffffffff1660e01b8152600401610764929190610cb2565b6020604051808303816000875af1158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190610d13565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461084f9190610d40565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016108b3929190610d96565b602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190610dd4565b905081811015610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090610e5e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161099693929190610e7e565b6020604051808303816000875af11580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190610d13565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a199190610f47565b602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190610dd4565b9050919050565b600080fd5b6000819050919050565b610a7981610a66565b8114610a8457600080fd5b50565b600081359050610a9681610a70565b92915050565b600060208284031215610ab257610ab1610a61565b5b6000610ac084828501610a87565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af482610ac9565b9050919050565b610b0481610ae9565b8114610b0f57600080fd5b50565b600081359050610b2181610afb565b92915050565b600060208284031215610b3d57610b3c610a61565b5b6000610b4b84828501610b12565b91505092915050565b6000610b5f82610ac9565b9050919050565b610b6f81610b54565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b610b9981610a66565b82525050565b6000602082019050610bb46000830184610b90565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2382610a66565b9150610c2e83610a66565b925082610c3e57610c3d610bba565b5b828204905092915050565b6000610c5482610a66565b9150610c5f83610a66565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c9857610c97610be9565b5b828202905092915050565b610cac81610ae9565b82525050565b6000604082019050610cc76000830185610ca3565b610cd46020830184610b90565b9392505050565b60008115159050919050565b610cf081610cdb565b8114610cfb57600080fd5b50565b600081519050610d0d81610ce7565b92915050565b600060208284031215610d2957610d28610a61565b5b6000610d3784828501610cfe565b91505092915050565b6000610d4b82610a66565b9150610d5683610a66565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8b57610d8a610be9565b5b828201905092915050565b6000604082019050610dab6000830185610ca3565b610db86020830184610ca3565b9392505050565b600081519050610dce81610a70565b92915050565b600060208284031215610dea57610de9610a61565b5b6000610df884828501610dbf565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610e48601983610e01565b9150610e5382610e12565b602082019050919050565b60006020820190508181036000830152610e7781610e3b565b9050919050565b6000606082019050610e936000830186610ca3565b610ea06020830185610ca3565b610ead6040830184610b90565b949350505050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610f11602e83610e01565b9150610f1c82610eb5565b604082019050919050565b60006020820190508181036000830152610f4081610f04565b9050919050565b6000602082019050610f5c6000830184610ca3565b9291505056fea2646970667358221220b8dc78f2c4aab37b24b28ce2e3a899f535e29aba4eb2714d902c0b5176377f0764736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1358,
        "contract": "contracts/exchange/Exchange.sol:Exchange",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 1373,
        "contract": "contracts/exchange/Exchange.sol:Exchange",
        "label": "dexARate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1376,
        "contract": "contracts/exchange/Exchange.sol:Exchange",
        "label": "dexBRate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1380,
        "contract": "contracts/exchange/Exchange.sol:Exchange",
        "label": "daiBalances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1384,
        "contract": "contracts/exchange/Exchange.sol:Exchange",
        "label": "usdcBalances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}